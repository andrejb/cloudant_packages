#!/bin/bash -e
# Run this script on an EC2 instance running Ubuntu 11.10;
# knife ec2 server create -f m1.large -I ami-21f53948 --region us-east-1 -x ubuntu

SUITES="squeeze lucid maverick natty oneiric"
ARCHS="i386 amd64"

# Install build dependencies
sudo apt-get -y install ubuntu-dev-tools dpkg-dev git dh-make > /dev/null

# Configure web cache
sudo apt-get -y install polipo > /dev/null
export http_proxy="http://localhost:8123"

# Build SpiderMonkey source package if missing
echo -n "Building SpiderMonkey source package: "
if test -z "$(find . -maxdepth 1 -name 'js_*.dsc' -print -quit)"
then
    echo "starting"
    rm -rf js-1.8.5
    wget -cO js_1.8.5.orig.tar.gz http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz
    tar zxf js_1.8.5.orig.tar.gz
    cp -a js/debian js-1.8.5
    pushd js-1.8.5
    dpkg-buildpackage -S -uc -us
    popd
else
    echo "skip"
fi

# Build BigCouch source package if missing
echo -n "Building BigCouch source package: "
if test -z "$(find . -maxdepth 1 -name 'bigcouch_*.dsc' -print -quit)"
then
    echo "starting"
    rm -rf bigcouch-0.4.0
    mkdir -p bigcouch-0.4.0
    cp -a bigcouch/debian bigcouch-0.4.0
    pushd bigcouch-0.4.0
    wget -cO - https://github.com/cloudant/bigcouch/tarball/bigcouch-0.4.0pre6 | tar xzf - --strip=1
    git init
    git add `find . -maxdepth 1 -not -name debian`
    git commit -m "Tarball commit"
    git tag -m "CouchDB Version" "1.1.1"
    echo "This is the release tarball for 0.4.0" > .build
    git add .build
    git commit -m "Tarball commit"
    git tag -m "BigCouch version" "0.4.0"
    popd
    tar czf bigcouch_0.4.0.orig.tar.gz -C bigcouch-0.4.0 . --exclude=debian --transform 's,^./,bigcouch-0.4.0/,'
    pushd bigcouch-0.4.0
    dpkg-buildpackage -S -uc -us
    popd
else
    echo "skip"
fi

# Build binary packages
for SUITE in $SUITES
do
    for ARCH in $ARCHS
    do
	if [ "$ARCH" == "i386" ]; then SETARCH="linux32"; else SETARCH="linux64"; fi

	# Build chroot if missing
	echo -n "Building $SUITE ($ARCH) chroot: "
	if test -z "$(find ~/pbuilder -maxdepth 1 -name $SUITE-$ARCH-base.tgz -print -quit)"
	then
	    echo "starting"
	    pbuilder-dist $SUITE $ARCH create
	else
	    echo "skip"
	fi

	# Build erlang from source if missing
	echo -n "Building erlang for $SUITE ($ARCH): "
	if test -z "$(find ~/pbuilder -maxdepth 1 -name $SUITE-$ARCH.built_erlang -print -quit)"
	then
	    echo "starting"
	    $SETARCH pbuilder-dist $SUITE $ARCH execute --save-after-exec build_erlang
	    touch ~/pbuilder/$SUITE-$ARCH.built_erlang
	else
	    echo "skip"
	fi

	# Build binary SpiderMonkey package if missing
	echo -n "Building SpiderMonkey binary for $SUITE ($ARCH): "
	if test -z "$(find ~/pbuilder/$SUITE-${ARCH}_result -name 'libmozjs*.deb' -print -quit)"
	then
	    echo "starting"
	    $SETARCH pbuilder-dist $SUITE $ARCH build js_*.dsc
	    else
	    echo "skip"
	fi

	echo -n "Building BigCouch binary for $SUITE ($ARCH): "
	if test -z "$(find ~/pbuilder/$SUITE-${ARCH}_result -name 'bigcouch_*.deb' -print -quit)"
	then
	    echo "starting"
	    pushd ~/pbuilder/$SUITE-${ARCH}_result
	    mkdir -p dists/$SUITE/main/binary-$ARCH
	    dpkg-scanpackages . | gzip -9c > dists/$SUITE/main/binary-$ARCH/Packages.gz
	    cat <<EOF > dists/$SUITE/main/binary-$ARCH/Release
Archive: $SUITE
Component: main
Architecture: $ARCH
EOF
	    popd
	    $SETARCH pbuilder-dist $SUITE $ARCH update \
		--bindmounts "$(readlink -m ~/pbuilder/$SUITE-${ARCH}_result)" \
		--othermirror "deb [arch=$ARCH] file:$(readlink -m ~/pbuilder/$SUITE-${ARCH}_result) $SUITE main"
	    $SETARCH pbuilder-dist $SUITE $ARCH build \
		--bindmounts "$(readlink -m ~/pbuilder/$SUITE-${ARCH}_result)" \
		--othermirror "deb [arch=$ARCH] file:$(readlink -m ~/pbuilder/$SUITE-${ARCH}_result) $SUITE main" \
		bigcouch_*.dsc
	else
	    echo "skip"
	fi
    done
done
